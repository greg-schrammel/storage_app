rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read, write: if authUserId() == userId;
    }

    match /files/{fileId} {
      allow read, write: if isOwner();
      match /contents {
        allow read: if canReadContent(fileId);
        allow write: if canWriteContent(fileId);
      }
      match /name {
        allow read: if canReadContent(fileId);
        allow write: if canWriteContent(fileId);
      }
    }


    // File
    function getFile(fileId) {
      return getData('files', fileId);
    }
    function isOwner(fileId) {
      return authUserId() == getFile(fileId).owner;
    }
    function canReadContent(fileId) {
      return isOwner(fileId) || authUserId() in getFile(fileId).permissions.read
    }
    function canWriteContent(fileId) {
      return isOwner(fileId) || authUserId() in getFile(fileId).permissions.write
    }

    // Util
    function getData(collection, documentId) {
      return get(/databases/$(database)/documents/$(collection)/$(documentId)).data;
    }
    function authUserId() {
      return request.auth != null && request.auth.uid
    }
  }
}